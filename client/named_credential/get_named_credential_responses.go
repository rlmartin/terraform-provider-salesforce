// Code generated by go-swagger; DO NOT EDIT.

package named_credential

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vestahealthcare/models"
)

// GetNamedCredentialReader is a Reader for the GetNamedCredential structure.
type GetNamedCredentialReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNamedCredentialReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNamedCredentialOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetNamedCredentialDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetNamedCredentialOK creates a GetNamedCredentialOK with default headers values
func NewGetNamedCredentialOK() *GetNamedCredentialOK {
	return &GetNamedCredentialOK{}
}

/*
GetNamedCredentialOK describes a response with status code 200, with default header values.

successful operation
*/
type GetNamedCredentialOK struct {
	Payload *models.NamedCredential
}

func (o *GetNamedCredentialOK) Error() string {
	s := fmt.Sprintf("%+v", o.Payload)
	b, err := json.Marshal(o.Payload)
	if err == nil {
		s = string(b)
	}
	return fmt.Sprintf("[GET /tooling/sobjects/NamedCredential/{Id}][%d] getNamedCredentialOK  %s", 200, s)
}
func (o *GetNamedCredentialOK) GetPayload() *models.NamedCredential {
	return o.Payload
}

func (o *GetNamedCredentialOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NamedCredential)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNamedCredentialDefault creates a GetNamedCredentialDefault with default headers values
func NewGetNamedCredentialDefault(code int) *GetNamedCredentialDefault {
	return &GetNamedCredentialDefault{
		_statusCode: code,
	}
}

/*
GetNamedCredentialDefault describes a response with status code -1, with default header values.

Error
*/
type GetNamedCredentialDefault struct {
	_statusCode int

	Payload []*models.ErrorResponse
}

// Code gets the status code for the get named credential default response
func (o *GetNamedCredentialDefault) Code() int {
	return o._statusCode
}

func (o *GetNamedCredentialDefault) Error() string {
	s := fmt.Sprintf("%+v", o.Payload)
	b, err := json.Marshal(o.Payload)
	if err == nil {
		s = string(b)
	}
	return fmt.Sprintf("[GET /tooling/sobjects/NamedCredential/{Id}][%d] getNamedCredential default  %s", o._statusCode, s)
}
func (o *GetNamedCredentialDefault) GetPayload() []*models.ErrorResponse {
	return o.Payload
}

func (o *GetNamedCredentialDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
