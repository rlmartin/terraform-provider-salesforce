// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EventRelayConfigMetadataUpdate event relay config metadata update
//
// swagger:model EventRelayConfigMetadataUpdate
type EventRelayConfigMetadataUpdate struct {

	// relay option
	// Example: {\"ReplayRecovery\":\"LATEST\"}
	// Required: true
	// Enum: [{"ReplayRecovery":"EARLIEST"} {"ReplayRecovery":"LATEST"}]
	RelayOption *string `json:"relayOption"`
}

// Validate validates this event relay config metadata update
func (m *EventRelayConfigMetadataUpdate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRelayOption(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var eventRelayConfigMetadataUpdateTypeRelayOptionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["{\"ReplayRecovery\":\"EARLIEST\"}","{\"ReplayRecovery\":\"LATEST\"}"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eventRelayConfigMetadataUpdateTypeRelayOptionPropEnum = append(eventRelayConfigMetadataUpdateTypeRelayOptionPropEnum, v)
	}
}

const (

	// EventRelayConfigMetadataUpdateRelayOptionReplayRecoveryEARLIEST captures enum value "{\"ReplayRecovery\":\"EARLIEST\"}"
	EventRelayConfigMetadataUpdateRelayOptionReplayRecoveryEARLIEST string = "{\"ReplayRecovery\":\"EARLIEST\"}"

	// EventRelayConfigMetadataUpdateRelayOptionReplayRecoveryLATEST captures enum value "{\"ReplayRecovery\":\"LATEST\"}"
	EventRelayConfigMetadataUpdateRelayOptionReplayRecoveryLATEST string = "{\"ReplayRecovery\":\"LATEST\"}"
)

// prop value enum
func (m *EventRelayConfigMetadataUpdate) validateRelayOptionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, eventRelayConfigMetadataUpdateTypeRelayOptionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *EventRelayConfigMetadataUpdate) validateRelayOption(formats strfmt.Registry) error {

	if err := validate.Required("relayOption", "body", m.RelayOption); err != nil {
		return err
	}

	// value enum
	if err := m.validateRelayOptionEnum("relayOption", "body", *m.RelayOption); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this event relay config metadata update based on context it is used
func (m *EventRelayConfigMetadataUpdate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EventRelayConfigMetadataUpdate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EventRelayConfigMetadataUpdate) UnmarshalBinary(b []byte) error {
	var res EventRelayConfigMetadataUpdate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
